class Solution {
    public boolean isRobotBounded(String instructions) {
       //if rights == left will leave circle return false
       //if facing north (4 rights no left) will leave circle 
        //0 = W, 1= N, 2 = E, 3 = S
        //direction = direction == 1 ? 4 : direction -1;
        //direciton = direction == 4 ? 1 : direction + 1;
        
        //can also return false if we end up back at original spot even if we face straight
        
        int direction = 1;
        int x = 0;
        int y = 0;
        
        //array of coordinate pairs with index being direction
        int [][] coord = new int[][]{{-1, 0}, {0, 1}, {1, 0}, {0, -1}};
        
        for (char move : instructions.toCharArray()){
            if (move == 'L') direction = direction == 0 ? 3 : direction -1;
            else if (move == 'R') direction = direction == 3 ? 0 : direction +1;
            else{
                x += coord[direction][0];
                y += coord[direction][1];
            }
        }
  
        
        if (x == 0 && y == 0) return true;
        if (direction == 1) return false;
        
        
        return true;
    }
}

//understand that if stay in same spot will be bound in circle (got that from doing edgecases)
//understand that if facing north will be bound in circle
