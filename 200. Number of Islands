class Solution {
    public int numIslands(char[][] grid) {
        //dfs thru array 
        //if 1 change to -1 for visited and return true for island found
        //if 0 return false
        //if -1 return false cause this island was already found
        //dfs up 
        //dfs left 
        
        //return
        
        
        //algo 
        //iterate thru array whenever we find a 1 add +1 we exauhst and turn all dfs neibourhs to -1
        int count  = 0;
        
        for (int i = 0; i < grid.length; i++){
            for (int j = 0; j < grid[0].length; j++){
                if (grid[i][j] == '1'){
                    count += 1;
                    getIsland(grid, i, j);
                }
            }
        }
        
        return count;
    }
    
    
    private void getIsland(char[][] grid, int x, int y){
        if (grid[x][y] == '0') return;
        if (grid[x][y] == '2') return;
        
        grid[x][y] = '2';
        if (x > 0) getIsland(grid, x-1, y);
        if (x < grid.length -1) getIsland(grid, x+1, y);
        if (y > 0) getIsland(grid, x, y-1);
        if (y < grid[0].length -1) getIsland(grid, x, y+1);
        
        return;
        
        
    }
}
