class Solution {
    public int maxProfit(int[] prices) {
        int profit = 0;
        int lowest_buy = prices[0];

        for (int i = 0; i < prices.length; i++){
            //find lowest valley
            if (prices[i] < lowest_buy){
                lowest_buy = prices[i];
            }
            //find highest peak that followed after a lowest valley
            else if(prices[i] - lowest_buy > profit){
                profit = prices[i] - lowest_buy;
            }
        }
        
        return profit;
    
        
    
    }
}

//looking for the maximum peak following a minimum valley(since we wanna buy low sell high)
//need to keep track of minimum and make sure to update maximum RELATIVE to minimum so we can find the largest stretch
//to be able to do this just need to envision the computer logic
