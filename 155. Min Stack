class MinStack {
    Node top;
    Node min;
    int size;
    /** initialize your data structure here. */
    public MinStack() {
        this.top = null;
        this.min = null;
        this.size = 0;
    }
    
    public void push(int val) {
        
        
        Node node = new Node(val);        
        node.next = this.top;
        this.top = node;
        if (this.size == 0) this.min = top;
        else{
            if (this.top.getValue() <= this.min.getValue()){
                this.min = this.top;
            }
        }
        size++;
        
    }
    
    public void pop() {
        if (this.min == this.top){
            if (this.top.next != null){
                this.min = this.top.next;
                this.top = this.top.next;
                Node curr = this.min;
                while (curr != null){
                    if (curr.getValue() < this.min.getValue()){
                        this.min = curr;
                    }
                    curr = curr.next;
                }
            }
            else{
                this.top = null;
                this.min = null;
            }
        }
        else{
            this.top = this.top.next;
        }
        size--;
    }
    
    public int top() {
        return this.top.getValue();
    }
    
    public int getMin() {
        return this.min.getValue();
    }
}


class Node {
    private int val = 0;
    public Node next = null;
    
    public Node(int value){
        this.val = value;
    }
    
    public int getValue(){
        return this.val;
    }
    public void setValue(int value){
        this.val = value;
    }
}
/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(val);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
