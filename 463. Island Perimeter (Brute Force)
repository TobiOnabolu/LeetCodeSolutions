class Solution {
    public int islandPerimeter(int[][] grid) {

        int count = 0;
        
        if (grid.length == 0){
            return count;
        }
        
        
        //loop thru array
        for (int i = 0; i < grid.length; i++){
            for (int j = 0; j < grid[0].length; j++){
                if (grid[i][j] == 1){
                    count += 4;
                    //if grid i j == 1 add 4 and send to count neighbours function with count param and indexes
                    count = countNeighbours(count, i, j, grid);
                }
            }
        }
        return count;
    }
    
    private int countNeighbours(int count, int i, int j, int[][] grid){
        if (i - 1 >= 0 && grid[i-1][j] == 1){
            count -= 1;
        }
        if (i + 1 < grid.length && grid[i+1][j] == 1){
            count -= 1;
        }
        if (j - 1 >= 0 && grid[i][j-1] == 1){
            count -= 1;
        }
        if (j + 1 < grid[0].length && grid[i][j+1] == 1){
            count -= 1;
        }
        
        return count;
        
    }
    
}
